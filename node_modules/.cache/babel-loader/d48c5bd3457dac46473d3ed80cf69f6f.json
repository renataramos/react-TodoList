{"ast":null,"code":"var _jsxFileName = \"/Users/utilizador/Documents/academia/LocalRepo/todoList_js/todoList_repo/toDoList/src/components/Tasks.js\";\nimport React from 'react';\nexport default function Tasks(props) {\n  const completeTasksView = \"complete\";\n  const incompleteTasksView = \"incomplete\";\n  /*\n  if (props.view === completeTasksView){\n      return (\n          <div id =\"nav\" class=\"card-body\">\n          <ol>\n          {props.list.filter((task)=>task.completeStatus===true)\n              .map((task)=>(\n                  \n                  <li key={task.description}>\n                  <div id=\"description\">{task.description}</div>\n                  <div id=\"task-btns\">\n                  <button id=\"btns\" type=\"button\" className=\"btn btn-danger btn-sm\" onClick={()=> props.onRemoveTask(task.description)}><i class=\"fa fa-trash-alt\"></i></button>\n                  <button id=\"btns\" type=\"button\" className=\"btn btn-danger btn-sm\" onClick={()=> props.onToggleTask(task.description)}><i class=\"fas fa-times-circle\"></i></button>\n                  </div>\n                  </li>\n                  ))}\n                  </ol>\n                  </div>\n                  )\n              }\n              \n              if (props.view === incompleteTasksView){\n                  return (\n                      <div id =\"nav\" class=\"card-body\">\n                      <ol>\n                      {props.list.filter((task)=>task.completeStatus===false)\n                          .map((task)=>(\n                              \n                              <li key={task.description}>\n                              <div id=\"description\">{task.description}</div>\n                              <div id=\"task-btns\">\n                              <button id=\"btns\" type=\"button\" className=\"btn btn-danger btn-sm\" onClick={()=> props.onRemoveTask(task.description)}><i class=\"fa fa-trash-alt\"></i></button>\n                              <button id=\"btns\" type=\"button\" className=\"btn btn-success btn-sm\" onClick={()=> props.onToggleTask(task.description)}><i class=\"fas fa-check-circle\"></i></button>\n                              </div>\n                              </li>\n                              ))}\n                              </ol>\n                              </div>\n                              )\n                          }\n                  */\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"nav\",\n    class: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, props.list.map(task => /*#__PURE__*/React.createElement(\"li\", {\n    key: task.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  }, task.description), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"task-btns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"btns\",\n    type: \"button\",\n    className: \"btn btn-danger btn-sm\",\n    onClick: () => props.onRemoveTask(task.description),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-trash-alt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 151\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"btns\",\n    type: \"button\",\n    className: checkForButtonColor(task),\n    onClick: () => props.onToggleTask(task.description),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: checkForButtonType(task),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 155\n    }\n  })))))));\n}\n\nfunction checkForButtonType(task) {\n  if (task.completeStatus === true) {\n    return \"fas fa-times-circle\";\n  }\n\n  return \"fas fa-check-circle\";\n}\n\nfunction checkForButtonColor(task) {\n  if (task.completeStatus === true) {\n    return \"btn btn-danger btn-sm\";\n  }\n\n  return \"btn btn-success btn-sm\";\n}","map":{"version":3,"sources":["/Users/utilizador/Documents/academia/LocalRepo/todoList_js/todoList_repo/toDoList/src/components/Tasks.js"],"names":["React","Tasks","props","completeTasksView","incompleteTasksView","list","map","task","description","onRemoveTask","checkForButtonColor","onToggleTask","checkForButtonType","completeStatus"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,KAAT,CAAgBC,KAAhB,EAAuB;AAElC,QAAMC,iBAAiB,GAAG,UAA1B;AACA,QAAMC,mBAAmB,GAAG,YAA5B;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,sBACI;AAAK,IAAA,EAAE,EAAE,KAAT;AAAe,IAAA,KAAK,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACG,IAAN,CACIC,GADJ,CACSC,IAAD,iBAEL;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,IAAI,CAACC,WAA5B,CADR,eAEQ;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,EAAE,EAAC,MAAX;AAAkB,IAAA,IAAI,EAAC,QAAvB;AAAgC,IAAA,SAAS,EAAC,uBAA1C;AAAkE,IAAA,OAAO,EAAE,MAAKN,KAAK,CAACO,YAAN,CAAmBF,IAAI,CAACC,WAAxB,CAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsH;AAAG,IAAA,KAAK,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtH,CADA,eAEA;AAAQ,IAAA,EAAE,EAAC,MAAX;AAAkB,IAAA,IAAI,EAAC,QAAvB;AAAgC,IAAA,SAAS,EAAEE,mBAAmB,CAACH,IAAD,CAA9D;AAAsE,IAAA,OAAO,EAAE,MAAKL,KAAK,CAACS,YAAN,CAAmBJ,IAAI,CAACC,WAAxB,CAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA0H;AAAG,IAAA,KAAK,EAAEI,kBAAkB,CAACL,IAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1H,CAFA,CAFR,CAHH,CADL,CADR,CADJ;AAiBH;;AAED,SAASK,kBAAT,CAA4BL,IAA5B,EAAiC;AAC7B,MAAIA,IAAI,CAACM,cAAL,KAAwB,IAA5B,EAAiC;AAC7B,WAAO,qBAAP;AACH;;AACD,SAAO,qBAAP;AACH;;AAED,SAASH,mBAAT,CAA6BH,IAA7B,EAAkC;AAC9B,MAAIA,IAAI,CAACM,cAAL,KAAwB,IAA5B,EAAiC;AAC7B,WAAO,uBAAP;AACH;;AACD,SAAO,wBAAP;AACH","sourcesContent":["import React from 'react';\n\nexport default function Tasks (props) {\n    \n    const completeTasksView = \"complete\";\n    const incompleteTasksView = \"incomplete\";\n    /*\n    if (props.view === completeTasksView){\n        return (\n            <div id =\"nav\" class=\"card-body\">\n            <ol>\n            {props.list.filter((task)=>task.completeStatus===true)\n                .map((task)=>(\n                    \n                    <li key={task.description}>\n                    <div id=\"description\">{task.description}</div>\n                    <div id=\"task-btns\">\n                    <button id=\"btns\" type=\"button\" className=\"btn btn-danger btn-sm\" onClick={()=> props.onRemoveTask(task.description)}><i class=\"fa fa-trash-alt\"></i></button>\n                    <button id=\"btns\" type=\"button\" className=\"btn btn-danger btn-sm\" onClick={()=> props.onToggleTask(task.description)}><i class=\"fas fa-times-circle\"></i></button>\n                    </div>\n                    </li>\n                    ))}\n                    </ol>\n                    </div>\n                    )\n                }\n                \n                if (props.view === incompleteTasksView){\n                    return (\n                        <div id =\"nav\" class=\"card-body\">\n                        <ol>\n                        {props.list.filter((task)=>task.completeStatus===false)\n                            .map((task)=>(\n                                \n                                <li key={task.description}>\n                                <div id=\"description\">{task.description}</div>\n                                <div id=\"task-btns\">\n                                <button id=\"btns\" type=\"button\" className=\"btn btn-danger btn-sm\" onClick={()=> props.onRemoveTask(task.description)}><i class=\"fa fa-trash-alt\"></i></button>\n                                <button id=\"btns\" type=\"button\" className=\"btn btn-success btn-sm\" onClick={()=> props.onToggleTask(task.description)}><i class=\"fas fa-check-circle\"></i></button>\n                                </div>\n                                </li>\n                                ))}\n                                </ol>\n                                </div>\n                                )\n                            }\n                    */\n    \n    return (\n        <div id =\"nav\" class=\"card-body\">\n                <ol>\n                    {props.list\n                        .map((task)=>(\n\n                        <li key={task.description}>\n                                <div id=\"description\">{task.description}</div>\n                                <div id=\"task-btns\">\n                                <button id=\"btns\" type=\"button\" className=\"btn btn-danger btn-sm\" onClick={()=> props.onRemoveTask(task.description)}><i class=\"fa fa-trash-alt\"></i></button>\n                                <button id=\"btns\" type=\"button\" className={checkForButtonColor(task)} onClick={()=> props.onToggleTask(task.description)}><i class={checkForButtonType(task)}></i></button>\n                                </div>\n                        </li>\n                        ))}\n                </ol>\n        </div>\n    )\n}\n\nfunction checkForButtonType(task){\n    if (task.completeStatus === true){\n        return \"fas fa-times-circle\"\n    }\n    return \"fas fa-check-circle\"\n}\n\nfunction checkForButtonColor(task){\n    if (task.completeStatus === true){\n        return \"btn btn-danger btn-sm\"\n    }\n    return \"btn btn-success btn-sm\"\n}\n"]},"metadata":{},"sourceType":"module"}