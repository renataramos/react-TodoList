{"ast":null,"code":"var _jsxFileName = \"/Users/utilizador/Documents/academia/LocalRepo/todoList_js/todoList_repo/toDoList/src/components/IncompleteTasks.js\";\nimport React from 'react';\nexport default function IncompleteTasks(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }\n  }, \"incomplete tasks\"), /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, props.list.map(task => /*#__PURE__*/React.createElement(\"li\", {\n    key: task.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 25\n    }\n  }, task.description), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"btns\",\n    type: \"button\",\n    class: \"btn btn-secondary btn-sm\",\n    onClick: () => props.onRemoveTask(task.description),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 25\n    }\n  }, \"remove\"), \"if (\", task.completeStatus === false, \")\", /*#__PURE__*/React.createElement(\"button\", {\n    id: \"btns\",\n    type: \"button\",\n    class: \"btn btn-success btn-sm\",\n    onClick: () => props.onToggleTask(task.description),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 29\n    }\n  }, \"incomplete\"), \" else \", /*#__PURE__*/React.createElement(\"button\", {\n    id: \"btns\",\n    type: \"button\",\n    class: \"btn btn-success btn-sm\",\n    onClick: () => props.onToggleTask(task.description),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 29\n    }\n  }, \"complete\"))), \".\"));\n}","map":{"version":3,"sources":["/Users/utilizador/Documents/academia/LocalRepo/todoList_js/todoList_repo/toDoList/src/components/IncompleteTasks.js"],"names":["React","IncompleteTasks","props","list","map","task","description","onRemoveTask","completeStatus","onToggleTask"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,eAAT,CAA0BC,KAA1B,EAAiC;AAC5C,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAgBC,IAAD,iBACZ;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,IAAI,CAACC,WAAZ,CADJ,eAEI;AAAQ,IAAA,EAAE,EAAC,MAAX;AAAkB,IAAA,IAAI,EAAC,QAAvB;AAAgC,IAAA,KAAK,EAAC,0BAAtC;AAAiE,IAAA,OAAO,EAAE,MAAKJ,KAAK,CAACK,YAAN,CAAmBF,IAAI,CAACC,WAAxB,CAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,UAISD,IAAI,CAACG,cAAL,KAAwB,KAJjC,oBAKQ;AAAQ,IAAA,EAAE,EAAC,MAAX;AAAkB,IAAA,IAAI,EAAC,QAAvB;AAAgC,IAAA,KAAK,EAAC,wBAAtC;AAA+D,IAAA,OAAO,EAAE,MAAKN,KAAK,CAACO,YAAN,CAAmBJ,IAAI,CAACC,WAAxB,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALR,yBAOQ;AAAQ,IAAA,EAAE,EAAC,MAAX;AAAkB,IAAA,IAAI,EAAC,QAAvB;AAAgC,IAAA,KAAK,EAAC,wBAAtC;AAA+D,IAAA,OAAO,EAAE,MAAKJ,KAAK,CAACO,YAAN,CAAmBJ,IAAI,CAACC,WAAxB,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPR,CADH,CADL,MAFJ,CADJ;AAmBH","sourcesContent":["import React from 'react';\n\nexport default function IncompleteTasks (props) {\n    return (\n        <div>\n            <h3>incomplete tasks</h3>\n            <ol>\n                {props.list.map((task)=>(\n                    <li key={task.description}>\n                        <span>{task.description}</span>\n                        <button id=\"btns\" type=\"button\" class=\"btn btn-secondary btn-sm\" onClick={()=> props.onRemoveTask(task.description)}>remove</button>\n                        \n                        if ({task.completeStatus === false}){\n                            <button id=\"btns\" type=\"button\" class=\"btn btn-success btn-sm\" onClick={()=> props.onToggleTask(task.description)}>incomplete</button>\n                        } else {\n                            <button id=\"btns\" type=\"button\" class=\"btn btn-success btn-sm\" onClick={()=> props.onToggleTask(task.description)}>complete</button>\n                        }\n                    </li>\n                ))}.\n            </ol>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}