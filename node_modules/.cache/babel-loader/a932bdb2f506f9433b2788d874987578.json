{"ast":null,"code":"var _jsxFileName = \"/Users/utilizador/Documents/academia/LocalRepo/todoList_js/todoList_repo/toDoList/src/components/Tasks.js\";\nimport React from 'react';\nexport default function Tasks(props) {\n  if (props.windowHash === '#incomplete') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }\n    }, props.list.map(task => /*#__PURE__*/React.createElement(\"li\", {\n      key: task.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 29\n      }\n    }, task.description), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"btns\",\n      type: \"button\",\n      class: \"btn btn-secondary btn-sm\",\n      onClick: () => props.onRemoveTask(task.description),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 29\n      }\n    }, \"remove\"), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"btns\",\n      type: \"button\",\n      class: filterButton(task),\n      onClick: () => props.onToggleTask(task.description),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 29\n      }\n    }, filterTask(task))).filter())));\n  }\n\n  if (props.windowHash === '#complete') {}\n}\n\nfunction filterTask(task) {\n  if (task.completeStatus === false) {\n    return \"incomplete\";\n  }\n\n  return \"complete\";\n}\n\nfunction filterButton(task) {\n  if (task.completeStatus === false) {\n    return \"btn btn-danger btn-sm\";\n  }\n\n  return \"btn btn-success btn-sm\";\n}","map":{"version":3,"sources":["/Users/utilizador/Documents/academia/LocalRepo/todoList_js/todoList_repo/toDoList/src/components/Tasks.js"],"names":["React","Tasks","props","windowHash","list","map","task","description","onRemoveTask","filterButton","onToggleTask","filterTask","filter","completeStatus"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,KAAT,CAAgBC,KAAhB,EAAuB;AAClC,MAAGA,KAAK,CAACC,UAAN,KAAqB,aAAxB,EAAuC;AACnC,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAgBC,IAAD,IAAQ,aACpB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,IAAI,CAACC,WAAZ,CADJ,eAEI;AAAQ,MAAA,EAAE,EAAC,MAAX;AAAkB,MAAA,IAAI,EAAC,QAAvB;AAAgC,MAAA,KAAK,EAAC,0BAAtC;AAAiE,MAAA,OAAO,EAAE,MAAKL,KAAK,CAACM,YAAN,CAAmBF,IAAI,CAACC,WAAxB,CAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,MAAA,EAAE,EAAC,MAAX;AAAkB,MAAA,IAAI,EAAC,QAAvB;AAAgC,MAAA,KAAK,EAAEE,YAAY,CAACH,IAAD,CAAnD;AAA2D,MAAA,OAAO,EAAE,MAAKJ,KAAK,CAACQ,YAAN,CAAmBJ,IAAI,CAACC,WAAxB,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgHI,UAAU,CAACL,IAAD,CAA1H,CAHJ,CADoB,CAMtBM,MANsB,EAAvB,CADL,CADJ,CADJ;AAcH;;AACD,MAAIV,KAAK,CAACC,UAAN,KAAqB,WAAzB,EAAqC,CAEpC;AACJ;;AAED,SAASQ,UAAT,CAAoBL,IAApB,EAAyB;AACrB,MAAIA,IAAI,CAACO,cAAL,KAAwB,KAA5B,EAAkC;AAC9B,WAAO,YAAP;AACH;;AACD,SAAO,UAAP;AACH;;AAED,SAASJ,YAAT,CAAsBH,IAAtB,EAA2B;AACvB,MAAIA,IAAI,CAACO,cAAL,KAAwB,KAA5B,EAAkC;AAC9B,WAAO,uBAAP;AACH;;AACD,SAAO,wBAAP;AACH","sourcesContent":["import React from 'react';\n\nexport default function Tasks (props) {\n    if(props.windowHash === '#incomplete') {\n        return (\n            <div>\n                <ol>\n                    {props.list.map((task)=>(\n                        <li key={task.description}>\n                            <span>{task.description}</span>\n                            <button id=\"btns\" type=\"button\" class=\"btn btn-secondary btn-sm\" onClick={()=> props.onRemoveTask(task.description)}>remove</button>\n                            <button id=\"btns\" type=\"button\" class={filterButton(task)} onClick={()=> props.onToggleTask(task.description)}>{filterTask(task)}</button>\n                        </li>\n                    ).filter())}\n                </ol>\n            </div>\n            \n        )\n    }\n    if (props.windowHash === '#complete'){\n\n    } \n}\n\nfunction filterTask(task){\n    if (task.completeStatus === false){\n        return \"incomplete\"\n    }\n    return \"complete\"\n}\n\nfunction filterButton(task){\n    if (task.completeStatus === false){\n        return \"btn btn-danger btn-sm\"\n    }\n    return \"btn btn-success btn-sm\"\n}"]},"metadata":{},"sourceType":"module"}