{"ast":null,"code":"var _jsxFileName = \"/Users/utilizador/Documents/academia/LocalRepo/todoList_js/todoList_repo/toDoList/src/components/AppClass.js\";\nimport React from 'react';\nimport Input from '../components/Input.js';\nimport NavBar from '../components/NavBar.js';\nimport Tasks from '../components/Tasks.js';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allTasks: [{\n        description: \"Whaaaat\",\n        completeStatus: true\n      }, {\n        description: \"Whaaaat2\",\n        completeStatus: false\n      }],\n      input: ''\n    };\n    this.handleRemoveTask = this.handleRemoveTask.bind(this);\n    this.handleAddTask = this.handleAddTask.bind(this);\n    this.updateInput = this.updateInput.bind(this);\n    this.handleToggleCompletion = this.handleToggleCompletion.bind(this);\n    this.clearTasks = this.clearTasks.bind(this);\n  }\n\n  handleToggleCompletion(description) {\n    this.setState(currentState => {\n      const task = currentState.allTasks.find(task => task.description === description);\n      task.completeStatus = !task.completeStatus;\n      return {\n        allTasks: currentState.allTasks.filter(task => task.description !== description).concat([{\n          description,\n          completeStatus: !task.completeStatus\n        }])\n      };\n    });\n  }\n\n  handleAddTask() {\n    this.setState(currentState => {\n      return {\n        allTasks: currentState.allTasks.concat([{\n          description: currentState.input,\n          completeStatus: false\n        }]),\n        input: ''\n      };\n    });\n  }\n\n  handleRemoveTask(description) {\n    this.setState(currentState => {\n      return {\n        allTasks: currentState.allTasks.filter(task => task.description !== description)\n      };\n    });\n  }\n\n  updateInput(event) {\n    const value = event.target.value;\n    this.setState({\n      input: value\n    });\n  }\n\n  clearTasks() {\n    this.setState({\n      allTasks: []\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      value: this.state.input,\n      onInputChange: this.updateInput,\n      onAddTask: this.handleAddTask,\n      onClearTasks: this.clearTasks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Tasks, {\n      windowHash: window.location.hash,\n      list: this.state.allTasks,\n      onRemoveTask: this.handleRemoveTask,\n      onToggleTask: this.handleToggleCompletion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }));\n  }\n\n}\n/*<div class = \"card text\">\n                <div class=\"card-header\">\n                    <ul class=\"nav nav-tabs card-header-tabs\">\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link active\" href=\"#all\">all tasks</a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\" href=\"#complete\">complete tasks</a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\" href=\"#zi\">incomplete tasks</a>\n                        </li>\n                </ul>\n            </div>\n            </div>\n            <div class=\"card-body\">\n                <Tasks\n                    list={this.state.allTasks}\n                    onRemoveTask={this.handleRemoveTask} \n                    onToggleTask={this.handleToggleCompletion}\n                    />\n                </div>*/","map":{"version":3,"sources":["/Users/utilizador/Documents/academia/LocalRepo/todoList_js/todoList_repo/toDoList/src/components/AppClass.js"],"names":["React","Input","NavBar","Tasks","App","Component","constructor","props","state","allTasks","description","completeStatus","input","handleRemoveTask","bind","handleAddTask","updateInput","handleToggleCompletion","clearTasks","setState","currentState","task","find","filter","concat","event","value","target","render","window","location","hash"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Input from '../components/Input.js'\nimport NavBar from '../components/NavBar.js'\nimport Tasks from '../components/Tasks.js'\n\nexport default class App extends React.Component {\n\n    constructor(props){\n\n        super(props)\n        this.state = {\n            allTasks: [\n                {\n                    description: \"Whaaaat\",\n                    completeStatus: true\n                },\n\n                {\n                    description: \"Whaaaat2\",\n                    completeStatus: false\n                }\n            ],\n            input: ''\n        }\n        this.handleRemoveTask = this.handleRemoveTask.bind(this)\n        this.handleAddTask = this.handleAddTask.bind(this)\n        this.updateInput = this.updateInput.bind(this)\n        this.handleToggleCompletion = this.handleToggleCompletion.bind(this)\n        this.clearTasks = this.clearTasks.bind(this)\n\n    }\n\n    handleToggleCompletion(description){\n        this.setState((currentState)=>{\n            const task = currentState.allTasks.find((task) => task.description === description)\n            task.completeStatus = !task.completeStatus;\n            \n            \n            return {\n                allTasks: currentState.allTasks.filter((task) => task.description !== description)\n                .concat([{\n                    description,\n                    completeStatus : !task.completeStatus\n                }])\n            }\n        })\n    }\n\n    handleAddTask(){\n        this.setState((currentState)=>{\n            return {\n                allTasks: currentState.allTasks.concat([{\n                    description: currentState.input,\n                    completeStatus: false\n                }]),\n                input: ''\n            }\n        })\n    }\n\n    handleRemoveTask(description){\n        this.setState((currentState)=>{\n            return {\n                allTasks: currentState.allTasks.filter((task) => task.description !== description)\n            }\n        })\n    }\n\n    updateInput(event){\n        const value = event.target.value\n\n        this.setState({\n            input: value\n        })\n    }\n\n    clearTasks(){\n        this.setState({\n            allTasks:[]\n        })\n    }\n\n    render(){\n        return (\n            <div>\n                <Input\n                    value={this.state.input}\n                    onInputChange={this.updateInput}\n                    onAddTask={this.handleAddTask}\n                    onClearTasks={this.clearTasks}\n                />\n                <NavBar/>\n\n                \n                    \n\n                        <Tasks\n                        windowHash={window.location.hash}\n                        list={this.state.allTasks}\n                        onRemoveTask={this.handleRemoveTask} \n                        onToggleTask={this.handleToggleCompletion}\n                        />\n                    \n            </div>\n        \n        )}\n    }\n\n\n    /*<div class = \"card text\">\n                    <div class=\"card-header\">\n                        <ul class=\"nav nav-tabs card-header-tabs\">\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link active\" href=\"#all\">all tasks</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" href=\"#complete\">complete tasks</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" href=\"#zi\">incomplete tasks</a>\n                            </li>\n                    </ul>\n                </div>\n                </div>\n                <div class=\"card-body\">\n                    <Tasks\n                        list={this.state.allTasks}\n                        onRemoveTask={this.handleRemoveTask} \n                        onToggleTask={this.handleToggleCompletion}\n                        />\n                    </div>*/"]},"metadata":{},"sourceType":"module"}