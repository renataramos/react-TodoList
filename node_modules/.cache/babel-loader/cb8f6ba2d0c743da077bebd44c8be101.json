{"ast":null,"code":"var _jsxFileName = \"/Users/utilizador/Documents/academia/LocalRepo/todoList_js/todolist/src/components/AppClass.js\";\nimport React from 'react';\nimport IncompleteTasks from '../components/IncompleteTasks.js';\nimport CompleteTasks from './CompleteTasks.js';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allTasks: [{\n        description: 'contact recruiters',\n        completeStatus: true\n      }, {\n        description: 'remove unnecessary files from computer',\n        completeStatus: true\n      }, {\n        description: 'sleep',\n        completeStatus: false\n      }, {\n        description: 'learn React',\n        completeStatus: false\n      }],\n      input: ''\n    };\n    this.handleRemoveTask = this.handleRemoveTask.bind(this);\n    this.handleAddTask = this.handleAddTask.bind(this);\n    this.updateInput = this.updateInput.bind(this);\n    this.handleToggleCompletion = this.handleToggleCompletion.bind(this);\n  }\n\n  handleToggleCompletion(description) {\n    this.setState(currentState => {\n      const task = currentState.allTasks.find(task => task.description === description);\n      return {\n        allTasks: currentState.allTasks.filter(task => task.description !== description).concat([{\n          description,\n          completeStatus: !task.completeStatus\n        }])\n      };\n    });\n  }\n\n  handleAddTask() {\n    this.setState(currentState => {\n      return {\n        allTasks: currentState.allTasks.concat([{\n          description: currentState.input,\n          completeStatus: false\n        }]),\n        input: ''\n      };\n    });\n  }\n\n  handleRemoveTask(description) {\n    this.setState(currentState => {\n      return {\n        allTasks: currentState.allTasks.filter(task => task.description !== description)\n      };\n    });\n  }\n\n  updateInput(event) {\n    const value = event.target.value;\n    this.setState({\n      input: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"new task\",\n      value: this.state.input,\n      onChange: this.updateInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleAddTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"submit\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.setState({\n        allTasks: []\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, \"clear all\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"nav nav-tabs card-header-tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      class: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      class: \"nav-link active\",\n      href: \"#all\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }\n    }, \"all tasks\")), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      class: \"nav-link\",\n      href: \"#complete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }, \"complete tasks\")), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      class: \"nav-link\",\n      href: \"#zi\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }, \"incomplete tasks\")))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CompleteTasks, {\n      list: this.state.allTasks.filter(task => task.completeStatus === true),\n      onRemoveTask: this.handleRemoveTask,\n      onToggleTask: this.handleToggleCompletion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(IncompleteTasks, {\n      list: this.state.allTasks.filter(task => task.completeStatus === false),\n      onRemoveTask: this.handleRemoveTask,\n      onToggleTask: this.handleToggleCompletion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/utilizador/Documents/academia/LocalRepo/todoList_js/todolist/src/components/AppClass.js"],"names":["React","IncompleteTasks","CompleteTasks","App","Component","constructor","props","state","allTasks","description","completeStatus","input","handleRemoveTask","bind","handleAddTask","updateInput","handleToggleCompletion","setState","currentState","task","find","filter","concat","event","value","target","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport IncompleteTasks from '../components/IncompleteTasks.js'\nimport CompleteTasks from './CompleteTasks.js'\n\nexport default class App extends React.Component {\n\n    constructor(props){\n\n        super(props)\n        this.state = {\n            allTasks: [\n                {\n                    description: 'contact recruiters',\n                    completeStatus: true\n                },\n                {\n                    description: 'remove unnecessary files from computer',\n                    completeStatus: true\n                },\n                {\n                    description: 'sleep',\n                    completeStatus: false\n                },\n                {\n                    description: 'learn React',\n                    completeStatus: false\n                }\n            ],\n            input: ''\n        }\n        this.handleRemoveTask = this.handleRemoveTask.bind(this)\n        this.handleAddTask = this.handleAddTask.bind(this)\n        this.updateInput = this.updateInput.bind(this)\n        this.handleToggleCompletion = this.handleToggleCompletion.bind(this)\n\n    }\n\n    handleToggleCompletion(description){\n        this.setState((currentState)=>{\n            const task = currentState.allTasks.find((task) => task.description === description)\n\n            return {\n                allTasks: currentState.allTasks.filter((task) => task.description !== description)\n                .concat([{\n                    description,\n                    completeStatus : !task.completeStatus\n                }])\n            }\n        })\n    }\n\n    handleAddTask(){\n        this.setState((currentState)=>{\n            return {\n                allTasks: currentState.allTasks.concat([{\n                    description: currentState.input,\n                    completeStatus: false\n                }]),\n                input: ''\n            }\n        })\n    }\n\n    handleRemoveTask(description){\n        this.setState((currentState)=>{\n            return {\n                allTasks: currentState.allTasks.filter((task) => task.description !== description)\n            }\n        })\n    }\n\n    updateInput(event){\n        const value = event.target.value\n\n        this.setState({\n            input: value\n        })\n    }\n\n    render(){\n        return (\n            <div>\n                <input\n                    type='text'\n                    placeholder = 'new task'\n                    value={this.state.input}\n                    onChange={this.updateInput}\n                />\n                <button onClick = {this.handleAddTask}>submit</button>\n                <div>\n                <button onClick={()=> this.setState({\n                    allTasks: []\n                })}>clear all\n                </button>\n                </div>\n                \n                <div class = \"card text\">\n                    <div class=\"card-header\">\n                        <ul class=\"nav nav-tabs card-header-tabs\">\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link active\" href=\"#all\">all tasks</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" href=\"#complete\">complete tasks</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a class=\"nav-link\" href=\"#zi\">incomplete tasks</a>\n                            </li>\n                    </ul>\n                </div>\n                <div class=\"card-body\">\n\n                <CompleteTasks\n                    list={this.state.allTasks.filter((task)=> task.completeStatus === true)}\n                    onRemoveTask={this.handleRemoveTask} \n                    onToggleTask={this.handleToggleCompletion\n                    }\n                    />\n                <IncompleteTasks\n                    list={this.state.allTasks.filter((task)=> task.completeStatus === false)}\n                    onRemoveTask={this.handleRemoveTask} \n                    onToggleTask={this.handleToggleCompletion\n                    }\n                    />\n                </div>\n            </div>\n            </div>\n        )}\n    }"]},"metadata":{},"sourceType":"module"}